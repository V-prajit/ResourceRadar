version: '3'
services:
  influxdb:
    image: influxdb:latest
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=your_username
      - DOCKER_INFLUXDB_INIT_PASSWORD=your_password
      - DOCKER_INFLUXDB_INIT_ORG=server_stat
      - DOCKER_INFLUXDB_INIT_BUCKET=Server_Stats
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=F563snz6Ha80Y2pxMHU-6yVonlIrUs-JmhVPVJYY_e4VgwXWq34EtSx5MNES-Lubnz-D7-Kfa8Rlb3gH8aLmRQ==
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=POSTGRESSECURE
      - POSTGRES_DB=sshinfo
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  backend:
    build: ./backend
    ports:
      - "3001:3001"
    environment:
      - INFLUX_TOKEN=F563snz6Ha80Y2pxMHU-6yVonlIrUs-JmhVPVJYY_e4VgwXWq34EtSx5MNES-Lubnz-D7-Kfa8Rlb3gH8aLmRQ==
      - INFLUX_ORG=server_stat
      - INFLUX_BUCKET=Server_Stats
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=sshinfo
      - PGPASSWORD=POSTGRESSECURE
      - PGPORT=5432
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - influxdb
      - postgres

  frontend:
    build: ./frontend
    ports:
      - "80:80"  # Expose port 80 for the frontend app
    depends_on:
      - backend  # Ensure backend starts before frontend
    environment:
      - REACT_APP_API_URL=http://backend:3001

volumes:
  influxdb-data:
  postgres-data:
